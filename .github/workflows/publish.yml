name: Publish KaosNet API Docker Images

on:
  release:
    types:
      - created
      - edited

jobs:
  check-docker-secrets:
    name: Check Docker Secrets
    runs-on: ubuntu-latest
    outputs:
      is_have_secrets: ${{ steps.check_secret_job.outputs.is_have_secrets }}
    steps:
      - id: check_secret_job
        run: |
          if [[ "${{ vars.DOCKER_REGISTRY }}" != "" && \
                "${{ vars.DOCKER_REPO }}" != "" && \
                "${{ secrets.DOCKER_USERNAME }}" != "" && \
                "${{ secrets.DOCKER_TOKEN }}" != "" ]]; \
          then
            echo "is_have_secrets=true" >> $GITHUB_OUTPUT
          else
            echo "is_have_secrets=false" >> $GITHUB_OUTPUT
          fi

  push-docker-images:
    name: Build and Push KaosNet API Images
    needs: [check-docker-secrets]
    if: needs.check-docker-secrets.outputs.is_have_secrets == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download publish artifact
        uses: actions/download-artifact@v4
        with:
          name: kaosnetapi
          path: publish/

      - name: Login to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Alpine image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/production-alpine.Dockerfile
          push: true
          tags: |
            ${{ vars.DOCKER_REGISTRY }}/${{ vars.DOCKER_REPO }}:alpine
            ${{ vars.DOCKER_REGISTRY }}/${{ vars.DOCKER_REPO }}:alpine-${{ github.event.release.tag_name }}

      - name: Build and push Standard image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/production.Dockerfile
          push: true
          tags: |
            ${{ vars.DOCKER_REGISTRY }}/${{ vars.DOCKER_REPO }}:latest
            ${{ vars.DOCKER_REGISTRY }}/${{ vars.DOCKER_REPO }}:${{ github.event.release.tag_name }}
