-- MySQL Script generated by MySQL Workbench
-- Sun Sep 28 13:53:02 2025
-- Model: KaosNet    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema kaosnet
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `kaosnet` ;

-- -----------------------------------------------------
-- Schema kaosnet
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `kaosnet` DEFAULT CHARACTER SET utf8 COLLATE utf8_spanish2_ci ;
SHOW WARNINGS;
USE `kaosnet` ;

-- -----------------------------------------------------
-- Table `kaosnet`.`ROLE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kaosnet`.`ROLE` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `kaosnet`.`ROLE` (
  `role_id` INT NOT NULL AUTO_INCREMENT,
  `role_name` VARCHAR(100) NOT NULL,
  `role_description` VARCHAR(255) NULL,
  `role_status` VARCHAR(45) NULL,
  `is_active` TINYINT NOT NULL DEFAULT 1,
  `idsession` INT NULL,
  PRIMARY KEY (`role_id`),
  UNIQUE INDEX `role_id_UNIQUE` (`role_id` ASC))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `kaosnet`.`USER`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kaosnet`.`USER` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `kaosnet`.`USER` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `user_name` VARCHAR(100) NOT NULL,
  `session_time` INT(10) NULL,
  `failed_login` INT(2) NULL,
  `current_sessions` INT(2) NULL,
  `email` VARCHAR(255) NOT NULL,
  `security_question` VARCHAR(255) NULL,
  `secret_answer` VARCHAR(255) NULL,
  `role_fk` INT NOT NULL,
  `user_status` VARCHAR(45) NULL,
  `is_active` TINYINT NOT NULL DEFAULT 1,
  `idsession` INT NULL,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `user_id_UNIQUE` (`user_id` ASC),
  INDEX `fk_USER_ROLE1_idx` (`role_fk` ASC),
  CONSTRAINT `fk_USER_ROLE1`
    FOREIGN KEY (`role_fk`)
    REFERENCES `kaosnet`.`ROLE` (`role_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `kaosnet`.`MODULE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kaosnet`.`MODULE` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `kaosnet`.`MODULE` (
  `module_id` INT NOT NULL AUTO_INCREMENT,
  `module_name` VARCHAR(100) NOT NULL,
  `module_description` VARCHAR(255) NULL,
  `module_icon` VARCHAR(45) NULL,
  `menu_sequence` INT(2) NULL,
  `module_status` VARCHAR(45) NULL,
  `is_active` TINYINT NOT NULL DEFAULT 1,
  `idsession` INT NULL,
  PRIMARY KEY (`module_id`),
  UNIQUE INDEX `module_id_UNIQUE` (`module_id` ASC))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `kaosnet`.`VIEW`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kaosnet`.`VIEW` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `kaosnet`.`VIEW` (
  `view_id` INT NOT NULL AUTO_INCREMENT,
  `view_name` VARCHAR(100) NOT NULL,
  `view_description` VARCHAR(255) NULL,
  `view_icon` VARCHAR(45) NULL,
  `module_fk` INT NOT NULL,
  `module_sequence` INT(2) NULL,
  `view_path` VARCHAR(45) NULL,
  `parent_view_fk` INT NULL,
  `view_status` VARCHAR(45) NULL,
  `is_active` TINYINT NOT NULL DEFAULT 1,
  `idsession` INT NULL,
  PRIMARY KEY (`view_id`),
  UNIQUE INDEX `view_id_UNIQUE` (`view_id` ASC),
  INDEX `fk_VIEW_MODULE1_idx` (`module_fk` ASC),
  INDEX `fk_VIEW_VIEW1_idx` (`parent_view_fk` ASC),
  CONSTRAINT `fk_VIEW_MODULE1`
    FOREIGN KEY (`module_fk`)
    REFERENCES `kaosnet`.`MODULE` (`module_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_VIEW_VIEW1`
    FOREIGN KEY (`parent_view_fk`)
    REFERENCES `kaosnet`.`VIEW` (`view_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `kaosnet`.`ROLE_ACCESS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kaosnet`.`ROLE_ACCESS` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `kaosnet`.`ROLE_ACCESS` (
  `role_access_id` INT NOT NULL AUTO_INCREMENT,
  `role_fk` INT NOT NULL,
  `view_fk` INT NOT NULL,
  `is_write` TINYINT NULL DEFAULT 1,
  `role_access_status` VARCHAR(45) NULL,
  `is_active` TINYINT NOT NULL DEFAULT 1,
  `idsession` INT NULL,
  PRIMARY KEY (`role_access_id`),
  UNIQUE INDEX `role_access_id_UNIQUE` (`role_access_id` ASC),
  INDEX `fk_ROLE_ACCESS_ROLE_idx` (`role_fk` ASC),
  INDEX `fk_ROLE_ACCESS_VIEW1_idx` (`view_fk` ASC),
  INDEX `uk_ROLE_ACCESS_role_view` (`role_fk` ASC, `view_fk` ASC),
  CONSTRAINT `fk_ROLE_ACCESS_ROLE`
    FOREIGN KEY (`role_fk`)
    REFERENCES `kaosnet`.`ROLE` (`role_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ROLE_ACCESS_VIEW1`
    FOREIGN KEY (`view_fk`)
    REFERENCES `kaosnet`.`VIEW` (`view_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `kaosnet`.`PASSWORD`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kaosnet`.`PASSWORD` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `kaosnet`.`PASSWORD` (
  `password_id` INT NOT NULL AUTO_INCREMENT,
  `password` VARCHAR(255) NOT NULL,
  `created_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `expiration_date` TIMESTAMP NULL,
  `user_fk` INT NOT NULL,
  `password_status` VARCHAR(45) NULL,
  `is_active` TINYINT NOT NULL DEFAULT 1,
  `idsession` INT NULL,
  PRIMARY KEY (`password_id`),
  INDEX `fk_PASSWORD_USER1_idx` (`user_fk` ASC),
  UNIQUE INDEX `password_id_UNIQUE` (`password_id` ASC),
  CONSTRAINT `fk_PASSWORD_USER1`
    FOREIGN KEY (`user_fk`)
    REFERENCES `kaosnet`.`USER` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `kaosnet`.`STREAMING_TYPE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kaosnet`.`STREAMING_TYPE` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `kaosnet`.`STREAMING_TYPE` (
  `streaming_type_id` INT NOT NULL AUTO_INCREMENT,
  `streaming_type_name` VARCHAR(100) NULL,
  `streaming_type_description` VARCHAR(255) NULL,
  `streaming_type_status` VARCHAR(45) NULL,
  `is_active` TINYINT NOT NULL DEFAULT 1,
  `idsession` INT NULL,
  PRIMARY KEY (`streaming_type_id`),
  UNIQUE INDEX `streaming_type_id_UNIQUE` (`streaming_type_id` ASC))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `kaosnet`.`STREAMING_ACCOUNT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kaosnet`.`STREAMING_ACCOUNT` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `kaosnet`.`STREAMING_ACCOUNT` (
  `streaming_account_id` INT NOT NULL AUTO_INCREMENT,
  `streaming_account_name` VARCHAR(100) NULL,
  `account_email` VARCHAR(255) NOT NULL,
  `account_password` VARCHAR(255) NOT NULL,
  `price` DECIMAL(10,2) NULL,
  `streaming_type_fk` INT NOT NULL,
  `valid_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `expired_date` TIMESTAMP NULL,
  `maximum_quantity_profiles` INT(2) NULL DEFAULT 1,
  `profiles_quantity` INT(2) NULL,
  `streaming_account_status` VARCHAR(45) NULL,
  `is_active` TINYINT NOT NULL DEFAULT 1,
  `idsession` INT NULL,
  PRIMARY KEY (`streaming_account_id`),
  UNIQUE INDEX `streaming_account_id_UNIQUE` (`streaming_account_id` ASC),
  INDEX `fk_STREAMING_ACCOUNT_STREAMING_TYPE1_idx` (`streaming_type_fk` ASC),
  CONSTRAINT `fk_STREAMING_ACCOUNT_STREAMING_TYPE1`
    FOREIGN KEY (`streaming_type_fk`)
    REFERENCES `kaosnet`.`STREAMING_TYPE` (`streaming_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `kaosnet`.`CURRENCY`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kaosnet`.`CURRENCY` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `kaosnet`.`CURRENCY` (
  `currency_id` INT NOT NULL AUTO_INCREMENT,
  `currency_name` VARCHAR(100) NOT NULL,
  `currency_code` VARCHAR(45) NULL,
  `symbol` CHAR(10) NULL,
  `currency_status` VARCHAR(45) NULL,
  `is_active` TINYINT NOT NULL DEFAULT 1,
  `idsession` INT NULL,
  PRIMARY KEY (`currency_id`),
  UNIQUE INDEX `currency_id_UNIQUE` (`currency_id` ASC))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `kaosnet`.`CONVERSION_RATE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kaosnet`.`CONVERSION_RATE` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `kaosnet`.`CONVERSION_RATE` (
  `conversion_rate_id` INT NOT NULL AUTO_INCREMENT,
  `valid_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `amount_rate` DECIMAL(10,4) NOT NULL,
  `currency_from_id` INT NOT NULL,
  `currency_to_id` INT NOT NULL,
  `is_reversed` TINYINT NULL DEFAULT 0,
  `parent_conversion_rate_fk` INT NULL,
  `conversion_rate_status` VARCHAR(45) NULL,
  `is_active` TINYINT NOT NULL DEFAULT 1,
  `idsession` INT NULL,
  PRIMARY KEY (`conversion_rate_id`),
  INDEX `fk_CONVERSION_RATE_CURRENCY1_idx` (`currency_from_id` ASC),
  INDEX `fk_CONVERSION_RATE_CURRENCY2_idx` (`currency_to_id` ASC),
  INDEX `fk_CONVERSION_RATE_CONVERSION_RATE1_idx` (`parent_conversion_rate_fk` ASC),
  UNIQUE INDEX `conversion_rate_id_UNIQUE` (`conversion_rate_id` ASC),
  CONSTRAINT `fk_CONVERSION_RATE_CURRENCY1`
    FOREIGN KEY (`currency_from_id`)
    REFERENCES `kaosnet`.`CURRENCY` (`currency_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CONVERSION_RATE_CURRENCY2`
    FOREIGN KEY (`currency_to_id`)
    REFERENCES `kaosnet`.`CURRENCY` (`currency_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CONVERSION_RATE_CONVERSION_RATE1`
    FOREIGN KEY (`parent_conversion_rate_fk`)
    REFERENCES `kaosnet`.`CONVERSION_RATE` (`conversion_rate_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `kaosnet`.`SUBSCRIPTION_PLAN`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kaosnet`.`SUBSCRIPTION_PLAN` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `kaosnet`.`SUBSCRIPTION_PLAN` (
  `subscription_plan_id` INT NOT NULL AUTO_INCREMENT,
  `subscription_plan_name` VARCHAR(100) NULL,
  `subscription_plan_description` VARCHAR(255) NULL,
  `amount_total` DECIMAL(10,2) NULL,
  `subscription_plan_status` VARCHAR(45) NULL,
  `is_active` TINYINT NOT NULL DEFAULT 1,
  `idsession` INT NULL,
  PRIMARY KEY (`subscription_plan_id`),
  UNIQUE INDEX `subscription_plan_id_UNIQUE` (`subscription_plan_id` ASC))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `kaosnet`.`CUSTOMER`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kaosnet`.`CUSTOMER` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `kaosnet`.`CUSTOMER` (
  `customer_id` INT NOT NULL AUTO_INCREMENT,
  `customer_name` VARCHAR(255) NOT NULL,
  `contact_email` VARCHAR(255) NULL,
  `contact_number` VARCHAR(45) NULL,
  `subscription_plan_fk` INT NULL,
  `customer_status` VARCHAR(45) NULL,
  `is_active` TINYINT NOT NULL DEFAULT 1,
  `idsession` INT NULL,
  PRIMARY KEY (`customer_id`),
  UNIQUE INDEX `customer_id_UNIQUE` (`customer_id` ASC),
  INDEX `fk_CUSTOMER_SUBSCRIPTION_PLAN1_idx` (`subscription_plan_fk` ASC),
  CONSTRAINT `fk_CUSTOMER_SUBSCRIPTION_PLAN1`
    FOREIGN KEY (`subscription_plan_fk`)
    REFERENCES `kaosnet`.`SUBSCRIPTION_PLAN` (`subscription_plan_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `kaosnet`.`SALES_ACCOUNT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kaosnet`.`SALES_ACCOUNT` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `kaosnet`.`SALES_ACCOUNT` (
  `id_sales_account` INT NOT NULL AUTO_INCREMENT,
  `contact_number` VARCHAR(45) NULL,
  `contact_email` VARCHAR(255) NULL,
  `sales_date` TIMESTAMP NULL,
  `profile_pin` VARCHAR(45) NULL,
  `profile_number` INT(2) NULL,
  `amount_sales` DECIMAL(10,2) NULL,
  `customer_id` INT NULL,
  `streaming_account_fk` INT NOT NULL,
  `currency_fk` INT NOT NULL,
  `sales_account_status` VARCHAR(45) NULL,
  `is_active` TINYINT NOT NULL DEFAULT 1,
  `idsession` INT NULL,
  PRIMARY KEY (`id_sales_account`),
  INDEX `fk_SALES_ACCOUNT_STREAMING_ACCOUNT1_idx` (`streaming_account_fk` ASC),
  INDEX `fk_SALES_ACCOUNT_CURRENCY1_idx` (`currency_fk` ASC),
  INDEX `fk_SALES_ACCOUNT_CUSTOMER1_idx` (`customer_id` ASC),
  UNIQUE INDEX `id_sales_account_UNIQUE` (`id_sales_account` ASC),
  CONSTRAINT `fk_SALES_ACCOUNT_STREAMING_ACCOUNT1`
    FOREIGN KEY (`streaming_account_fk`)
    REFERENCES `kaosnet`.`STREAMING_ACCOUNT` (`streaming_account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_SALES_ACCOUNT_CURRENCY1`
    FOREIGN KEY (`currency_fk`)
    REFERENCES `kaosnet`.`CURRENCY` (`currency_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_SALES_ACCOUNT_CUSTOMER1`
    FOREIGN KEY (`customer_id`)
    REFERENCES `kaosnet`.`CUSTOMER` (`customer_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `kaosnet`.`SUBSCRIPTION_PLAN_ACCOUNT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kaosnet`.`SUBSCRIPTION_PLAN_ACCOUNT` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `kaosnet`.`SUBSCRIPTION_PLAN_ACCOUNT` (
  `subscription_plan_account_id` INT NOT NULL AUTO_INCREMENT,
  `subscription_plan_fk` INT NOT NULL,
  `streaming_account_fk` INT NOT NULL,
  `quantity_accounts` INT NULL,
  `amount_sub_total` DECIMAL(10,2) NULL,
  `subscription_plan_account_status` VARCHAR(45) NULL,
  `is_active` TINYINT NOT NULL DEFAULT 1,
  `idsession` INT NULL,
  PRIMARY KEY (`subscription_plan_account_id`),
  UNIQUE INDEX `subscription_plan_account_id_UNIQUE` (`subscription_plan_account_id` ASC),
  INDEX `fk_SUBSCRIPTION_PLAN_ACCOUNT_STREAMING_ACCOUNT1_idx` (`streaming_account_fk` ASC),
  INDEX `fk_SUBSCRIPTION_PLAN_ACCOUNT_SUBSCRIPTION_PLAN1_idx` (`subscription_plan_fk` ASC),
  INDEX `uk_SUBSCRIPTION_PLAN_ACCOUNT_subscription_plan_streaming_account` (`streaming_account_fk` ASC, `subscription_plan_fk` ASC),
  CONSTRAINT `fk_SUBSCRIPTION_PLAN_ACCOUNT_STREAMING_ACCOUNT1`
    FOREIGN KEY (`streaming_account_fk`)
    REFERENCES `kaosnet`.`STREAMING_ACCOUNT` (`streaming_account_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_SUBSCRIPTION_PLAN_ACCOUNT_SUBSCRIPTION_PLAN1`
    FOREIGN KEY (`subscription_plan_fk`)
    REFERENCES `kaosnet`.`SUBSCRIPTION_PLAN` (`subscription_plan_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
SET SQL_MODE = '';
DROP USER IF EXISTS kaosnet_admin;
SET SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
SHOW WARNINGS;
CREATE USER 'kaosnet_admin' IDENTIFIED BY '9KGaD5HRto0g5WBE';

GRANT ALL ON `kaosnet`.* TO 'kaosnet_admin';
SHOW WARNINGS;
SET SQL_MODE = '';
DROP USER IF EXISTS kaosnet_user;
SET SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
SHOW WARNINGS;
CREATE USER 'kaosnet_user' IDENTIFIED BY 'xHVVkayKwCOW0H12';

GRANT SELECT, INSERT, TRIGGER ON TABLE `kaosnet`.* TO 'kaosnet_user';
GRANT SELECT, INSERT, TRIGGER, UPDATE, DELETE ON TABLE `kaosnet`.* TO 'kaosnet_user';
GRANT SELECT ON TABLE `kaosnet`.* TO 'kaosnet_user';
SHOW WARNINGS;
SET SQL_MODE = '';
DROP USER IF EXISTS kaosnet_read;
SET SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
SHOW WARNINGS;
CREATE USER 'kaosnet_read' IDENTIFIED BY '8163IcV2H4FjEyGR';

GRANT SELECT ON TABLE `kaosnet`.* TO 'kaosnet_read';
SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
